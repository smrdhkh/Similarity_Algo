
1,"getScript(""OUAFCore_UI"").callFunction(""startApp""); qwerty think(2); qwerty // Getting values from databank qwerty getDatabank(strPrimaryDatabank).getNextDatabankRecord(); qwerty //Calling Random Function to append random string (3 characters)at the end of To Do Role name and To Do Type name qwerty strCharTypePrefix=getScript(""StringLib"").callFunction(""randomstring"",3,3).toString().toUpperCase(); qwerty try { qwerty testCreateToDoRole(); qwerty testCreateToDoType(); qwerty testToDoFunctionality(); qwerty "
2,"getScript(""FunctionLibrary"").callFunction(""endScenario""); qwerty browser.closeAllBrowsers(); qwerty }public void testCreateToDoRole() throws Exception{ qwerty /********************************************************************************************** qwerty *	TEST NAME		:	Test will verify To Do Role creation qwerty *	DESCRIPTION		:	This script would check validation while creating To Do Role qwerty *	DEPENDENCY		:	Common Libraries qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 November 2012 Created qwerty *					:   Jayanta Dey - Oct 26,2017 - Modify this function to reduce execution time qwerty /**********************************************************************************************/ qwerty info(""*********************** Create To Do Role ***********************""); qwerty getScript(""ToDoLib"").callFunction(""createToDoRole"",readDataBankforToDoRole()); qwerty String toDoRoleName=web.textBox(""{{obj.T.ToDoRole.ToDoRoleIdTxt}}"").getAttribute(""value""); qwerty if (toDoRoleName.equalsIgnoreCase(ToDoRole.get(""TODOROLE_NAME""))){ qwerty info(""PASSED: TO DO Role successfully created""); qwerty "
3,"}}public void testCreateToDoType() throws Exception{ qwerty /********************************************************************************************** qwerty *	TEST NAME		:	Test will verify To Do Type creation qwerty *	DESCRIPTION		:	This script would check validation while creating To Do Type qwerty *	DEPENDENCY		:	Common Libraries qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 November 2012 Created qwerty *					:   Jayanta Dey - Oct 26,2017 - Modify this function to reduce execution time qwerty /**********************************************************************************************/ qwerty info(""*********************** Create To Do Type ***********************""); qwerty getScript(""ToDoLib"").callFunction(""createToDoType"",readDataBankforToDoType()); qwerty web.element(""/web:window[@index='0' or @title='To Do Type']/web:document[@name='tabMenu']/web:td[@text='Main']"").click(); qwerty think(1); qwerty String todoTypeValue=web.textBox(""{{obj.T.ToDoType.ToDoTypeId}}"").getAttribute(""value""); qwerty if(todoTypeValue.equalsIgnoreCase(ToDoType.get(""TODOTYPE_NAME""))){ qwerty info(""PASSED: To Do Type successfully created""); qwerty "
4,"/********************************************************************************************** qwerty *	TEST NAME		:	Test will verify basic ToDo functionality qwerty *	DESCRIPTION		:	This script will verify basic ToDo functionality qwerty *	DEPENDENCY		:	Common Libraries qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 Oct 2012 Created qwerty *					:   Jayanta Dey, 26 Oct,2017 - Modify this function to Reduce Execution time qwerty /**********************************************************************************************/ qwerty /*************** LOCAL VARIABLES ****************/ qwerty String strUsr; qwerty String strPasswd; qwerty /***********************************************/ qwerty // Create To Do Entry qwerty createToDoEntry(); qwerty // Update To Do Entry qwerty updateToDoEntry(); qwerty //Forward to user SPLSLK qwerty strUsr=this.getVariables().get(""db.TDTS001.LoginUser1""); qwerty info(""strUsr: ""+strUsr); qwerty strPasswd=this.getVariables().get(""db.TDTS001.LoginPassword1""); qwerty forwardToUser(strUsr); qwerty //Send back to a user qwerty getScript(""OUAFCore_UI"").callFunction(""logout""); qwerty think(2); qwerty //Login with SPLSLK user qwerty normalLogin(strUsr,strPasswd); qwerty sendBackToUser(); qwerty //Reopening and Reassigning a ToDo Entry. qwerty getScript(""OUAFCore_UI"").callFunction(""logout""); qwerty // Login with SYSUSER user qwerty strUsr=this.getVariables().get(""db.""+strPrimaryDatabank + "".LoginUser2""); qwerty strPasswd=this.getVariables().get(""db.""+strPrimaryDatabank + "".LoginPassword2""); qwerty //loginWithUser(strUsr,strPasswd); qwerty normalLogin(strUsr,strPasswd); qwerty ReopenToDOEntry(); qwerty //Complete To Do qwerty completeToDoEntry(); qwerty }/** qwerty * This function will work when already you are in a login page qwerty * @param strUser qwerty * @param strPasswd qwerty * @throws AbstractScriptException qwerty */public void normalLogin(String strUser,String strPasswd) throws AbstractScriptException{ qwerty web.textBox(""{{obj.OUAF402.LoginPage.UID}}"").setText(strUser); qwerty web.textBox(""{{obj.OUAF402.LoginPage.UID}}"").pressTab(); qwerty web.textBox(""{{obj.OUAF402.LoginPage.PWD}}"").setPassword(strPasswd); qwerty web.textBox(""{{obj.OUAF402.LoginPage.PWD}}"").pressTab(); qwerty web.element(""{{obj.OUAF402.LoginPage.LoginBtn}}"").click(); qwerty think(3); qwerty }public void updateToDoEntry() throws AbstractScriptException{ qwerty /********************************************************************************************** qwerty *	TEST NAME		:	Function to Update a To Do Entry qwerty *	DESCRIPTION		:	This script will Update a To Do Entry qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 November 2012 Created qwerty *					:	28-May-13: Sunny Mutyala - Added code for report generation qwerty *					:   Jayanta Dey - 26 Oct,2017, Modify this function to reduce time qwerty /**********************************************************************************************/ qwerty info(""*********************** Update To Do Entry ***********************""); qwerty web.selectBox(""{{obj.T.ToDoEntryPage.PriorityFlagLst}}"").selectOptionByText(""Priority 20""); qwerty think(1); qwerty web.textBox(""{{obj.T.ToDoEntryPage.CommentsTxtArea}}"").click(); qwerty web.textBox(""{{obj.T.ToDoEntryPage.CommentsTxtArea}}"").setText(""Priority 20""); qwerty web.textBox(""{{obj.T.ToDoEntryPage.CommentsTxtArea}}"").pressTab(); qwerty //think(2); qwerty web.button(""{{obj."" + strPrimaryOR + "".ToDoEntryPage.SaveBtn}}"").click(); qwerty think(2); qwerty strTemp1=web.table(""{{obj.T.ToDoEntry.LogTbl}}"").getCell(2,5).trim(); qwerty if(strTemp1.contains(""Priority changed"")){ qwerty info(""PASSED:To Do Entry updated successfully""); qwerty "
5,"}}/** qwerty * Navigate to a page through search menu qwerty * @param pageName qwerty * @throws AbstractScriptException qwerty */public void navigatePage(String pageName) throws AbstractScriptException{ qwerty web.textBox(""{{obj.OUAF402.SearchMenu.InputTextbox}}"").click(); qwerty web.textBox(""{{obj.OUAF402.SearchMenu.InputTextbox}}"").setText(pageName); qwerty web.textBox(""{{obj.OUAF402.SearchMenu.InputTextbox}}"").focus(); qwerty web.textBox(""{{obj.OUAF402.SearchMenu.InputTextbox}}"").click(); qwerty think(1); qwerty if (web.element(""/web:window[@index='0']/web:document[@name='main']/web:div[@text='"" + pageName + ""']"").exists()) qwerty System.out.println(""Element is present""); qwerty web.element(""/web:window[@index='0']/web:document[@name='main']/web:div[@text='"" + pageName + ""']"").mouseOver(); qwerty think(2); qwerty web.element(""/web:window[@index='0']/web:document[@name='main']/web:div[@text='"" + pageName + ""']"").click(); qwerty think(3); qwerty System.out.println(web.getFocusedWindow().getTitle()+""window titlte---------""); qwerty if(web.element(""{{obj.OUAF402.BrowserPage.LogoutBtn}}"").exists() && !web.element(""/web:window[@index='0']/web:document[@name='main']/web:div[@text='"" + pageName + ""']"").exists()) qwerty {System.out.println("" if logout button is shown""); qwerty web.textBox(""{{obj.OUAF402.SearchMenu.InputTextbox}}"").focus(); qwerty web.textBox(""{{obj.OUAF402.SearchMenu.InputTextbox}}"").click(); qwerty think(2); qwerty if (web.element(""/web:window[@index='0']/web:document[@name='main']/web:div[@text='"" + pageName + ""']"").exists()) qwerty System.out.println(""Element is present""); qwerty web.element(""/web:window[@index='0']/web:document[@name='main']/web:div[@text='"" + pageName + ""']"").mouseOver(); qwerty think(1); qwerty web.element(""/web:window[@index='0']/web:document[@name='main']/web:div[@text='"" + pageName + ""']"").click(); qwerty think(3); qwerty }}public void createToDoEntry() throws Exception{ qwerty /********************************************************************************************** qwerty *	TEST NAME		:	Function to create a To Do Entry qwerty *	DESCRIPTION		:	This script will create a To Do Entry qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 November 2012 Created qwerty *					:	28-May-13: Sunny Mutyala - Added code for report generation qwerty *					:   Jayanta Dey - 26 Oct,2017 - Modify to reduce execution time qwerty /**********************************************************************************************/ qwerty info(""*********************** Create To Do Entry ***********************""); qwerty navigatePage(""Add To Do Entry""); qwerty web.selectBox(""{{obj."" + strPrimaryOR + "".ToDoEntryAdd.ToDoTypeSelectBox}}"").selectOptionByText(strToDoTypeDesc.trim()); qwerty think(2); qwerty web.textBox(""{{obj.T.ToDoEntry.SubjectTxt}}"").click(); qwerty web.textBox(""{{obj.T.ToDoEntry.SubjectTxt}}"").setText(strToDoTypeDesc); qwerty web.textBox(""{{obj.T.ToDoEntry.SubjectTxt}}"").pressTab(); qwerty //think(2); qwerty web.button(""{{obj.T.ToDoEntryAdd.OkBtn}}"").click(); qwerty think(2); qwerty intToDoId=web.textBox(""{{obj.T.ToDoEntry.ToDoIdTxt}}"").getAttribute(""value""); qwerty info(""To Do Id: ""+intToDoId); qwerty if(!intToDoId.isEmpty()){ qwerty info(""PASSED: To Do Entry Created Successfully""); qwerty "
6,"}}public void forwardToUser(String strUsr) throws Exception{ qwerty /********************************************************************************************** qwerty *	TEST NAME		:	Function to forward a To do to a user qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 November 2012 Created qwerty *					:   Jayanta Dey - 26 Oct,2017 - Modify to reduce execution time qwerty /**********************************************************************************************/ qwerty info(""*********************** Forward To Do Entry To User: ""+strUsr+"" ***********************""); qwerty /*************** LOCAL VARIABLES ****************/ qwerty int intRowCnt; qwerty String strLog=""Forward To User""; qwerty /***********************************************/ qwerty // Forward to user SPLSLK qwerty web.button(""{{obj.T.ToDoEntry.ForwardBtn}}"").click(); qwerty think(2); qwerty //ToDoEntryForward.UserText qwerty web.textBox(""{{obj.T.ToDoEntryForward.UserText}}"").click(); qwerty web.textBox(""{{obj.T.ToDoEntryForward.UserText}}"").setText(strUsr); qwerty web.textBox(""{{obj.T.ToDoEntryForward.UserText}}"").pressTab(); qwerty web.textArea(""{{obj.T.ToDoEntryForward.LogDetailsTxtArea}}"").click(); qwerty think(1); qwerty web.textArea(""{{obj.T.ToDoEntryForward.LogDetailsTxtArea}}"").setText((strLog.trim())); qwerty web.textArea(""{{obj.T.ToDoEntryForward.LogDetailsTxtArea}}"").pressTab(); qwerty //think(2); qwerty web.button(""{{obj.T.ToDoEntryForward.OkBtn}}"").click(); qwerty think(2); qwerty strTemp1=web.table(""{{obj.T.ToDoEntry.LogTbl}}"").getCell(2,5).trim(); qwerty info(""strTemp1:"" + strTemp1); qwerty if(strTemp1.contains(strLog)){ qwerty info(""PASSED: Forwarded to user succeeded... ToDo Entry page is updated new log details:"" + strLog); qwerty "
7,"}else { qwerty info(""FAILED: Forwarded to user failed..ToDo Entry page is not updated new log details:"" + strLog); qwerty "
8,"/********************************************************************************************** qwerty *	TEST NAME		:	Function to send back To Do to a user qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 November 2012 Created qwerty *					:   Jayanta Dey - 20 Oct,2017 - Modify this function to reduce execution time qwerty /**********************************************************************************************/ qwerty info(""*********************** Send back To Do Entry to User ***********************""); qwerty /*************** LOCAL VARIABLES ****************/ qwerty String strLog=""send back this id""; qwerty /***********************************************/ qwerty navigatePage(""Add To Do Entry""); qwerty if(web.window(""/web:window[@index='2' or @title='Add To Do Entry']"").exists()){ qwerty web.window(""/web:window[@index='2' or @title='Add To Do Entry']"").close(); qwerty }web.textBox(""{{obj.T.ToDoEntry.ToDoIdTxt}}"").click(); qwerty web.textBox(""{{obj.T.ToDoEntry.ToDoIdTxt}}"").setText(intToDoId); qwerty web.textBox(""{{obj.T.ToDoEntry.ToDoIdTxt}}"").pressEnter(); qwerty think(2); qwerty // Update Send Back details qwerty web.button(""{{obj.T.ToDoEntryPage.SendBackBtn}}"").click(); qwerty think(2); qwerty web.textArea(""{{obj.T.ToDoEntrySendBack.DetailsTxtArea}}"").click(); qwerty web.textArea(""{{obj.T.ToDoEntrySendBack.DetailsTxtArea}}"").setText((strLog.trim())); qwerty web.textArea(""{{obj.T.ToDoEntrySendBack.DetailsTxtArea}}"").pressTab(); qwerty web.button(""{{obj.T.ToDoEntrySendBack.OkBtn}}"").click(); qwerty think(2); qwerty strTemp1=web.table(""{{obj."" + strPrimaryOR + "".ToDoEntry.LogTbl}}"").getCell(2,5).trim(); qwerty info(""strTemp1:"" + strTemp1); qwerty if(strTemp1.contains(strLog)){ qwerty info(""PASSED: Send back to user succeded... ToDo Entry page is updated new log details:"" + strLog); qwerty "
9,"}else { qwerty info(""FAILED: Send back to user failed... ToDo Entry page is not updated new log details:"" + strLog); qwerty "
10,"/********************************************************************************************** qwerty *	TEST NAME		:	Function to complete a To Do Entry qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 November 2012 Created qwerty *					:   Jayanta Dey - 26 Oct,2017, Modify this function to reduce Execution time qwerty /**********************************************************************************************/ qwerty info(""*********************** Complete To Do Entry ***********************""); qwerty navigatePage(""Add To Do Entry""); qwerty if(web.window(""/web:window[@index='2' or @title='Add To Do Entry']"").exists()){ qwerty web.window(""/web:window[@index='2' or @title='Add To Do Entry']"").close(); qwerty }web.textBox(""{{obj.T.ToDoEntry.ToDoIdTxt}}"").click(); qwerty web.textBox(""{{obj.T.ToDoEntry.ToDoIdTxt}}"").setText(intToDoId); qwerty web.textBox(""{{obj.T.ToDoEntry.ToDoIdTxt}}"").pressEnter(); qwerty think(2); qwerty // Complete To Do qwerty web.button(""{{obj."" + strPrimaryOR + "".ToDoEntry.ToDoEntryCompleteBtn}}"").click(); qwerty think(2); qwerty strTemp1=web.table(""{{obj."" + strPrimaryOR + "".ToDoEntry.LogTbl}}"").getCell(2,4).trim(); qwerty if(strTemp1.contains(""Completed"")){ qwerty info(""PASSED: ToDo Entry is successfully completed""); qwerty "
11,"/********************************************************************************************** qwerty *    TEST NAME         :    Function to Open a To Do Entry qwerty *    TTEST DESC        :	Test 99615 To Do Search – Reopen a To Do Entry qwerty *    DEVELOPER         :    Srikanth Gagganapalli qwerty *    REVISION History  :    17th April 2013 Created qwerty *    				   :    Jayanta Dey - 26 Oct,2017, Modify this function to reduce Execution time qwerty /**********************************************************************************************/ qwerty info(""*********************** Reopen To Do Entry  ***********************""); qwerty navigatePage(""To Do Search""); qwerty web.selectBox(""{{obj.T.ToDoSearchPage.ToDoTypeFilter}}"").selectOptionByText(""Specific To Do Type""); qwerty think(2); qwerty web.textBox(""{{obj.T.ToDoSearchPage.ToDoTypeFilter.ToDoType}}"").setText(strToDoTypeName); qwerty web.textBox(""{{obj.T.ToDoSearchPage.ToDoTypeFilter.ToDoType}}"").pressEnter(); qwerty think(1); qwerty web.selectBox(""{{obj.T.ToDoSearchPage.DateRangeFilter}}"").selectOptionByText(""All""); qwerty think(1); qwerty web.button(""{{obj.T.ToDoSearchPage.resultsImg}}"").click(); qwerty think(1); qwerty web.button(""{{obj.T.ToDoSearchPage.btnSelectAll}}"").click(); qwerty think(1); qwerty web.button(""{{obj.T.ToDoSearchPage.btnReopen}}"").click(); qwerty think(2); qwerty if(web.table(""{{obj.T.ToDoSearchPage.resultToDos}}"").getCell(2,8).trim().contains(""Open"")) qwerty {info(""PASSED: ToDO got updated to Open Status""); qwerty "
12,"}info(""*********************** To Do Entry Assign to a user ***********************""); qwerty web.button(""{{obj.T.ToDoSearchPage.btnSelectAll}}"").click(); qwerty web.textBox(""{{obj.T.ToDoSearchPage.tfldAssigned_TO_User}}"").setText(this.getVariables().get(""db.""+strPrimaryDatabank + "".LoginUser2"")); qwerty web.textBox(""{{obj.T.ToDoSearchPage.tfldAssigned_TO_User}}"").pressTab(); qwerty web.button(""{{obj.T.ToDoSearchPage.btnAssign}}"").click(); qwerty think(2); qwerty if(web.table(""{{obj.T.ToDoSearchPage.resultToDos}}"").getCell(2,6).trim().contains(this.getVariables().get(""db.""+strPrimaryDatabank + "".LoginUser2""))) qwerty {info(""PASSED: ToDO got Assigned to To the expected User""); qwerty "
13,"}else qwerty {info(""FAILED: ToDo did not get assigned to the Expected user ""+this.getVariables().get(""db.""+strPrimaryDatabank + "".LoginUser2"")); qwerty "
14,"try{ qwerty //strLogFile = getScript(""LoggingAndResultsReporting"").callFunction(""getPathForLogsFolder"").toString() + getScriptPackage().getScriptName() + "".log""; qwerty // getScript(""LoggingAndResultsReporting"").callFunction(""createLogFile"",getScriptPackage().getScriptName(),""Test will verify To Do Role creation""); qwerty getScript(""OUAFCore_UI"").callFunction(""startApp""); qwerty think(thinkHigh); qwerty // Getting values from databank qwerty getDatabank(strPrimaryDatabank).getNextDatabankRecord(); qwerty think(thinkLow); qwerty //Calling Random Function to append random string (3 characters)at the end of To Do Role name and To Do Type name qwerty strCharTypePrefix=getScript(""StringLib"").callFunction(""randomstring"",3,3).toString().toUpperCase(); qwerty createToDoRoleTDTS002(); qwerty think(thinkLow); qwerty createToDoTypeTDTS002(); qwerty think(thinkLow); qwerty testScenarioTDTS002(); qwerty "
15,"// This method will kill the browser after each script execution depending on the flag values of closebrowseraftereachtest and processname from EnvinomentConfig.csv qwerty //getScript(""OUAFCore_UI"").callFunction(""customRecovery""); qwerty getScript(""FunctionLibrary"").callFunction(""endScenario""); qwerty browser.closeAllBrowsers(); qwerty }public void createToDoRoleTDTS002() throws Exception{ qwerty /********************************************************************************************** qwerty *	TEST NAME		:	Test will verify To Do Role creation qwerty *	DESCRIPTION		:	This script would check validation while creating To Do Role qwerty *	DEPENDENCY		:	Common Libraries qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 November 2012 Created qwerty */**********************************************************************************************/ qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Role"", true); qwerty think(thinkHigh); qwerty // Create a To Do Role qwerty getScript(""ToDoLib"").callFunction(""createToDoRole"",readDataBankforToDoRole()); qwerty //Verification steps for TO DO Role creation qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Role"", false); qwerty think(thinkLow); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoRoleSearch.RoleIdTxt}}"").setText(strToDoRoleName); qwerty think(thinkLow); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoRoleSearch.RoleIdTxt}}"").pressEnter(); qwerty think(thinkMed); qwerty strTemp=web.textBox(""{{obj."" + strPrimaryOR + "".ToDoRole.ToDoRoleIdTxt}}"").getAttribute(""value"").toString().trim(); qwerty if((strTemp.trim()).equalsIgnoreCase(strToDoRoleName.trim())){ qwerty "
16,"//getScript(""LoggingAndResultsReporting"").callFunction(""LogResultsOutputAndShowStepResults"",""Verify whether ToDo Role is created"",""ToDo Role is successfully created"",""PASSED""); qwerty info(""TO DO Role successfully created""); qwerty }else{ qwerty "
17,"//getScript(""LoggingAndResultsReporting"").callFunction(""LogResultsOutputAndShowStepResults"",""Verify whether ToDo Role is created"",""ToDo Role is NOT created"",""FAILED""); qwerty reportFailure(""TO DO Role not successfully created""); qwerty }}public void createToDoTypeTDTS002() throws Exception{ qwerty /********************************************************************************************** qwerty *	TEST NAME		:	Test will verify To Do Type creation qwerty *	DESCRIPTION		:	This script would check validation while creating To Do Type qwerty *	DEPENDENCY		:	Common Libraries qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 November 2012 Created qwerty *					:	28-May-13: Sunny Mutyala - Added code for report generation qwerty */**********************************************************************************************/ qwerty think(thinkLow); qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Type"", true); qwerty think(thinkHigh); qwerty // Create a To Do Type qwerty getScript(""ToDoLib"").callFunction(""createToDoType"",readDataBankforToDoType()); qwerty //Verification steps for TO DO Role creation qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Type"", false); qwerty think(thinkLow); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoTypeSearchPage.ToDoTypeTxt}}"").setText(strToDoTypeName); qwerty think(thinkLow); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoTypeSearchPage.ToDoTypeTxt}}"").pressEnter(); qwerty think(thinkMed); qwerty strTemp=web.textBox(""{{obj."" + strPrimaryOR + "".ToDoType.ToDoTypeId}}"").getAttribute(""value"").toString().trim(); qwerty if((strTemp.trim()).equalsIgnoreCase(strToDoTypeName.trim())){ qwerty "
18,"//getScript(""LoggingAndResultsReporting"").callFunction(""LogResultsOutputAndShowStepResults"",""Verify whether ToDo Type is created"",""TO DO Type "" + strToDoTypeName + "" successfully created"",""PASSED""); qwerty info(""TO DO Type "" + strToDoTypeName + "" successfully created""); qwerty }else{ qwerty "
19,"//getScript(""LoggingAndResultsReporting"").callFunction(""LogResultsOutputAndShowStepResults"",""Verify whether ToDo Type is created"",""TO DO Type "" + strToDoTypeName + "" is not created"",""FAILED""); qwerty reportFailure(""TO DO Type "" + strToDoTypeName + ""  not successfully created""); qwerty }}public void testScenarioTDTS002() throws Exception{ qwerty /************************************************************************************************* qwerty *	TEST NAME		:	Test to check forwarding a To Do to a user dialog qwerty *	DEPENDENCY		:	Common Libraries qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 November 2012 Created qwerty *	OTM Test Case 	:   99162 qwerty **************************************************************************************************/ qwerty /** Declaring local variables */ qwerty int[] intRow; qwerty int intRowCnt,i; qwerty String intToDoId; qwerty boolean boolUser=true; qwerty /************************************************************************************************/ qwerty think(thinkLow); qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Main"", ""To Do"", ""To Do Entry"", true); qwerty think(thinkHigh); qwerty web.selectBox(""{{obj."" + strPrimaryOR + "".ToDoEntryAdd.ToDoTypeSelectBox}}"").selectOptionByText(strToDoTypeDesc.trim()); qwerty think(thinkLow); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoEntry.SubjectTxt}}"").click(); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoEntry.SubjectTxt}}"").setText(strToDoTypeDesc); qwerty think(thinkMed); qwerty web.button(""{{obj."" + strPrimaryOR + "".ToDoEntryAdd.OkBtn}}"").click(); qwerty think(thinkHigh); qwerty intToDoId=web.textBox(""{{obj."" + strPrimaryOR + "".ToDoEntry.ToDoIdTxt}}"").getAttribute(""value""); qwerty strTemp=web.element(""{{obj."" + strPrimaryOR + "".ToDoEntryAdd.ToDoEntryStatus}}"").getAttribute(""text""); qwerty if(strTemp.equalsIgnoreCase(""open"")){ qwerty info(""To Do Id "" + intToDoId + "" is created in Open State""); qwerty }else{ qwerty info(""To Do Id "" + intToDoId + "" is not created in Open State""); qwerty }// Navigating to To Do Summary page qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Main"", ""To Do"", ""To Do Summary""); qwerty think(thinkHigh); qwerty intRow=web.table(""{{obj."" + strPrimaryOR + "".ToDoSummary.ToDoSummaryTbl}}"").getRowIndexByColumnValue(1, strToDoTypeDesc, false); qwerty web.table(""{{obj."" + strPrimaryOR + "".ToDoSummary.ToDoSummaryTbl}}"").getElementInCell(intRow[0],4,""img"", 1).click(); qwerty think(thinkMed); qwerty web.table(""{{obj."" + strPrimaryOR + "".ToDoSummary.ToDoListTbl}}"").getElementInCell(2,4,""span"", 1).click(); qwerty think(thinkMed); qwerty web.button(""{{obj."" + strPrimaryOR + "".ToDoEntry.ForwardBtn}}"").click(); qwerty think(thinkMed); qwerty web.image(""{{obj."" + strPrimaryOR + "".ToDoEntryForward.UserSearchImg}}"").click(); qwerty think(thinkLow); qwerty intRowCnt=web.table(""{{obj."" + strPrimaryOR + "".ToDoType.UsersToDoTypeRoles}}"").getRowCount(); qwerty // Check whether Users for To Do Type roles are SYSUSER,SPLSLK qwerty if(intRowCnt != 3){ qwerty info(""Wrong number of users for To Do Type Roles""); qwerty return; qwerty }else { qwerty for(i=2;i<=3;i++){ qwerty strTemp=web.table(""{{obj."" + strPrimaryOR + "".ToDoType.UsersToDoTypeRoles}}"").getCell(i,1); qwerty info(""strTemp user:"" + strTemp); qwerty if(((strTemp.trim()).equalsIgnoreCase(strUser1)) || ((strTemp.trim()).equalsIgnoreCase(strUser2))){ qwerty boolUser=true; qwerty continue; qwerty }else{ qwerty info(i + """"); qwerty boolUser=false; qwerty } // End of if statement qwerty }// End of For statement qwerty // if the users are not SYSUSER and SPLSLK, throw an error and return qwerty if(boolUser == false){ qwerty info(""Wrong users exists for this To Do Type""); qwerty return; qwerty }else{ qwerty testToDoEntryLog(); qwerty }}}public void testToDoEntryLog() throws Exception{ qwerty /************************************************************************************************* qwerty *	TEST NAME		:	Test to check whether To Do Entry Log is correctly updated qwerty *	DEPENDENCY		:	Common Libraries qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 November 2012 Created qwerty *	OTM Test Case 	:   99162 qwerty **************************************************************************************************/ qwerty /********************* LOCAL VARIABLES *******************/ qwerty String strTemp1; qwerty strTemp=""Forwarded to User""; qwerty /*********************************************************/ qwerty info(""Correct users exists for this To Do Type""); qwerty web.table(""{{obj."" + strPrimaryOR + "".ToDoType.UsersToDoTypeRoles}}"").getElementInCell(2,1,""span"",1).click(); qwerty think(thinkLow); qwerty web.textArea(""{{obj."" + strPrimaryOR + "".ToDoEntryForward.LogDetailsTxtArea}}"").click(); qwerty web.textArea(""{{obj."" + strPrimaryOR + "".ToDoEntryForward.LogDetailsTxtArea}}"").setText((strTemp.trim())); qwerty think(thinkLow); qwerty web.button(""{{obj."" + strPrimaryOR + "".ToDoEntryForward.OkBtn}}"").click(); qwerty think(thinkMed); qwerty strTemp1=web.table(""{{obj."" + strPrimaryOR + "".ToDoEntry.LogTbl}}"").getCell(2,5).trim(); qwerty info(""strTemp:"" + strTemp); qwerty info(""strTemp1:"" + strTemp1); qwerty if(strTemp1.contains(strTemp)){ qwerty "
20,"// This method will kill the browser after each script execution depending on the flag values of closebrowseraftereachtest and processname from EnvinomentConfig.csv qwerty getScript(""OUAFCore_UI"").callFunction(""customRecovery""); qwerty }public void createToDoRoleTDTS003() throws Exception{ qwerty /********************************************************************************************** qwerty *	TEST NAME		:	Test will verify To Do Role creation qwerty *	DESCRIPTION		:	This script would check validation while creating To Do Role qwerty *	DEPENDENCY		:	Common Libraries qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 November 2012 Created qwerty *					:	28-May-13: Sunny Mutyala - Added code for report generation qwerty *	OTM TEST CASE   :   100192 qwerty /**********************************************************************************************/ qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Role"", true); qwerty think(thinkHigh); qwerty // Create a To Do Role qwerty getScript(""ToDoLib"").callFunction(""createToDoRole"",readDataBankforToDoRole()); qwerty //Verification steps for TO DO Role creation qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Role"", false); qwerty think(thinkLow); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoRoleSearch.RoleIdTxt}}"").setText(strToDoRoleName); qwerty think(thinkLow); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoRoleSearch.RoleIdTxt}}"").pressEnter(); qwerty think(thinkMed); qwerty strTemp=web.textBox(""{{obj."" + strPrimaryOR + "".ToDoRole.ToDoRoleIdTxt}}"").getAttribute(""value"").toString().trim(); qwerty if((strTemp.trim()).equalsIgnoreCase(strToDoRoleName.trim())){ qwerty info(""TO DO Role successfully created""); qwerty "
21,"}}public void createToDoTypeTDTS003() throws Exception{ qwerty /********************************************************************************************** qwerty *	TEST NAME		:	Test will verify To Do Type creation qwerty *	DESCRIPTION		:	This script would check validation while creating To Do Type qwerty *	DEPENDENCY		:	Common Libraries qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 November 2012 Created qwerty */**********************************************************************************************/ qwerty think(thinkLow); qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Type"", true); qwerty think(thinkHigh); qwerty // Create a To Do Type qwerty getScript(""ToDoLib"").callFunction(""createToDoType"",readDataBankforToDoType()); qwerty //Verification steps for TO DO Role creation qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Type"", false); qwerty think(thinkLow); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoTypeSearchPage.ToDoTypeTxt}}"").setText(strToDoTypeName); qwerty think(thinkLow); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoTypeSearchPage.ToDoTypeTxt}}"").pressEnter(); qwerty think(thinkMed); qwerty strTemp=web.textBox(""{{obj."" + strPrimaryOR + "".ToDoType.ToDoTypeId}}"").getAttribute(""value"").toString().trim(); qwerty if((strTemp.trim()).equalsIgnoreCase(strToDoTypeName.trim())){ qwerty "
22,"reportFailure(""TO DO Type "" + strToDoTypeName + ""  not successfully created""); qwerty }}public void testScenarioTDTS003() throws Exception{ qwerty /************************************************************************************************* qwerty *	TEST NAME		:	Test to REQUEST FOR TO DO LIST TO SORT BY THE EXTRA INFORMATION qwerty *	DEPENDENCY		:	Common Libraries qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 November 2012 Created qwerty *	OTM Test Case 	:   100192 qwerty **************************************************************************************************/ qwerty /********** Local Variables ************************************/ qwerty int intNumEntries=3,i; qwerty String strTemp1; qwerty boolean boolTest; qwerty /***************************************************************/ qwerty // creating To Do entries qwerty for (i=0;i<intNumEntries;i++){ qwerty createToDoEntries(i); qwerty }think(thinkLow); qwerty // Navigate to To Do List Page qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Main"", ""To Do"", ""To Do List""); qwerty think(thinkHigh); qwerty info(""strToDoTypeName"" + strToDoTypeName); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoTypeforUserSearch.ToDoTypeTxt}}"").click(); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoTypeforUserSearch.ToDoTypeTxt}}"").setText(strToDoTypeName); qwerty think(thinkLow); qwerty web.image(""{{obj."" + strPrimaryOR + "".ToDoTypeforUserSearch.ToDoTypeImg}}"").click(); qwerty think(thinkLow); qwerty strTemp1=web.textBox(""{{obj."" + strPrimaryOR + "".ToDoList.ToDoTypeTxt}}"").getAttribute(""value""); qwerty if(strTemp1.equalsIgnoreCase(strToDoTypeName)){ qwerty "
23,"// This method will kill the browser after each script execution depending on the flag values of closebrowseraftereachtest and processname from EnvinomentConfig.csv qwerty getScript(""OUAFCore_UI"").callFunction(""customRecovery""); qwerty }public void testScenarioTDTS005() throws Exception{ qwerty /************************************************************************************************* qwerty *	TEST NAME		:	COMPLETING TODOS USING F1-UPDATETODOENTRY DOES NOT CREATE qwerty *	DEPENDENCY		:	Common Libraries qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 November 2012 Created qwerty *	OTM Test Case 	:   100740 qwerty **************************************************************************************************/ qwerty /********************* LOCAL VARIABLES *******************/ qwerty String strTemp1; qwerty /********************************************************/ qwerty // Create To Do Entry qwerty createToDoEntry(); qwerty // Execute the BPA script qwerty // Invoke the Gold BPA Script qwerty getScript(""BPALib"").callFunction(""executeBPAScript"",completeToDoBPA,false); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoBPAScript.ToDoId}}"").setText(intToDoId); qwerty think(thinkLow); qwerty web.button(""{{obj."" + strPrimaryOR + "".ToDoBPAScript.ContinueBtn}}"").click(); qwerty think(thinkHigh); qwerty // Verify log in To Do Page qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Main"", ""To Do"", ""To Do Entry"", false); qwerty think(thinkHigh); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoEntrySearchPage.ToDoIdTxt}}"").click(); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoEntrySearchPage.ToDoIdTxt}}"").setText(intToDoId); qwerty think(thinkLow); qwerty web.image(""{{obj."" + strPrimaryOR + "".ToDoEntrySearchPage.ToDoIdSearchImg}}"").click(); qwerty think(thinkLow); qwerty strTemp1=web.table(""{{obj."" + strPrimaryOR + "".ToDoEntry.LogTbl}}"").getCell(2,4).trim(); qwerty if(strTemp1.contains(""Completed"")){ qwerty info(""ToDo Entry is successfully completed""); qwerty "
24,"reportFailure(""ToDo Entry is not successfully completed""); qwerty }}public void createToDoEntry() throws Exception{ qwerty /************************************************************************************************* qwerty *	TEST NAME		:	Function to create To Do entries qwerty *	DEPENDENCY		:	Common Libraries qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 November 2012 Created qwerty **************************************************************************************************/ qwerty /** Declaring local variables */ qwerty boolean boolUser=true; qwerty int[] intRow; qwerty /************************************************************************************************/ qwerty // Create a ToDoEntry and forward it to a user qwerty think(thinkLow); qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Main"", ""To Do"", ""To Do Entry"", true); qwerty think(thinkHigh); qwerty web.selectBox(""{{obj."" + strPrimaryOR + "".ToDoEntryAdd.ToDoTypeSelectBox}}"").selectOptionByText(strToDoTypeDesc.trim()); qwerty think(thinkLow); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoEntry.SubjectTxt}}"").click(); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoEntry.SubjectTxt}}"").setText(strToDoTypeDesc); qwerty think(thinkMed); qwerty /*web.textBox(""{{obj."" + strPrimaryOR + "".ToDoEntry.Role}}"").click(); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoEntry.Role}}"").setText(strToDoRoleName); qwerty think(thinkLow); qwerty web.image(""{{obj."" + strPrimaryOR + "".ToDoEntry.RoleSearch}}"").click(); qwerty think(thinkMed);*/ qwerty web.button(""{{obj."" + strPrimaryOR + "".ToDoEntryAdd.OkBtn}}"").click(); qwerty think(thinkHigh); qwerty intToDoId=web.textBox(""{{obj."" + strPrimaryOR + "".ToDoEntry.ToDoIdTxt}}"").getAttribute(""value""); qwerty strTemp=web.element(""{{obj."" + strPrimaryOR + "".ToDoEntryAdd.ToDoEntryStatus}}"").getAttribute(""text""); qwerty if(strTemp.equalsIgnoreCase(""open"")){ qwerty info(""To Do Id "" + intToDoId + "" is created in Open State""); qwerty }else{ qwerty info(""To Do Id "" + intToDoId + "" is not created in Open State""); qwerty }}public void testCreateToDoRoleTDTS005() throws Exception{ qwerty /********************************************************************************************** qwerty *	TEST NAME		:	Test will verify To Do Role creation qwerty *	DESCRIPTION		:	This script would check validation while creating To Do Role qwerty *	DEPENDENCY		:	Common Libraries qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 November 2012 Created qwerty */**********************************************************************************************/ qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Role"", true); qwerty think(thinkHigh); qwerty // Create a To Do Role qwerty getScript(""ToDoLib"").callFunction(""createToDoRole"",readDataBankforToDoRole()); qwerty //Verification steps for TO DO Role creation qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Role"", false); qwerty think(thinkLow); qwerty web.textBox(""{{obj.""+ strPrimaryOR +"".ToDoRoleSearch.RoleIdTxt}}"").setText(strToDoRoleName); qwerty think(thinkLow); qwerty web.textBox(""{{obj.""+ strPrimaryOR +"".ToDoRoleSearch.RoleIdTxt}}"").pressEnter(); qwerty think(thinkMed); qwerty strTemp=web.textBox(""{{obj.""+ strPrimaryOR +"".ToDoRole.ToDoRoleIdTxt}}"").getAttribute(""value"").toString().trim(); qwerty if((strTemp.trim()).equalsIgnoreCase(strToDoRoleName.trim())){ qwerty "
25,"reportFailure(""TO DO Role not successfully created""); qwerty }}public void testCreateToDoTypeTDTS005() throws Exception{ qwerty /********************************************************************************************** qwerty *	TEST NAME		:	Test will verify To Do Type creation qwerty *	DESCRIPTION		:	This script would check validation while creating To Do Type qwerty *	DEPENDENCY		:	Common Libraries qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 November 2012 Created qwerty */**********************************************************************************************/ qwerty think(thinkLow); qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Type"", true); qwerty think(thinkHigh); qwerty // Create a To Do Type qwerty getScript(""ToDoLib"").callFunction(""createToDoType"",readDataBankforToDoType()); qwerty //Verification steps for TO DO Role creation qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Type"", false); qwerty think(thinkLow); qwerty web.textBox(""{{obj.""+ strPrimaryOR +"".ToDoTypeSearchPage.ToDoTypeTxt}}"").setText(strToDoTypeName); qwerty think(thinkLow); qwerty web.textBox(""{{obj.""+ strPrimaryOR +"".ToDoTypeSearchPage.ToDoTypeTxt}}"").pressEnter(); qwerty think(thinkMed); qwerty strTemp=web.textBox(""{{obj.""+ strPrimaryOR +"".ToDoType.ToDoTypeId}}"").getAttribute(""value"").toString().trim(); qwerty if((strTemp.trim()).equalsIgnoreCase(strToDoTypeName.trim())){ qwerty info(""TO DO Type "" + strToDoTypeName + "" successfully created""); qwerty "
26,"""{{gStrScenarioOutputFilePath}}"", qwerty getVariables().get(""gStrCurrentScenarioName""), qwerty ""TC - 100813,98643,99163,99286:TO DO ROLE IS REQUIRED ON THE GENERIC TO DO ENTRY CREATOR ALG"", qwerty lModuleName, lTestEnvironment,"""","""",true); qwerty browser.launch(); qwerty }public void run() throws Exception qwerty {try{ qwerty //strLogFile = getScript(""LoggingAndResultsReporting"").callFunction(""getPathForLogsFolder"").toString() + getScriptPackage().getScriptName() + "".log""; qwerty // getScript(""LoggingAndResultsReporting"").callFunction(""createLogFile"",getScriptPackage().getScriptName(),""TC - 100813,98643,99163,99286:TO DO ROLE IS REQUIRED ON THE GENERIC TO DO ENTRY CREATOR ALG""); qwerty getDatabank(strPrimaryDatabank).getNextDatabankRecord(); qwerty test100813(); qwerty "
27,"e.printStackTrace(); qwerty info(""Exception :: "" + e.toString()); qwerty }}public void test100813() throws Exception qwerty {/*////////////////////////////////////////////////////////////////////////////// test100813  ///////////////////////////////////////////////////////////////////////////////////*/ qwerty /*	SCRIPT NAME		:	test100813 qwerty *	DESCRIPTION		:	Test 100813 Bug 14251420 - TO DO ROLE IS REQUIRED ON THE GENERIC TO DO ENTRY CREATOR ALG qwerty *	DEPENDENCY		:	Bundle TDTS006 (consists of Algorithm TF_TDTS006, Application Service TF_TDTS006, Business Object TF_TDTS006, Scripts TF_TDTS006_1,TF_TDTS006_2) qwerty *	DEVELOPER		:	Srikanth Reddy Gagganapalli qwerty *	REVISION		:	13th Mar 2013 Created qwerty *	TESTS COVERED   : 	Test 100813 qwerty //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*/ qwerty try{ qwerty getScript(""OUAFCore_UI"").callFunction(""startApp""); qwerty String Query = ""select Count(*) from sc_usr_grp_prof where USR_GRP_ID = '""+this.getVariables().get(""db.""+strPrimaryDatabank +"".UserGroupName"")+""'"" + qwerty "" and App_SVC_ID = '""+this.getVariables().get(""db.""+strPrimaryDatabank +"".ApplicationServiceName"")+""'""; qwerty ResultSet Rs = (ResultSet)getScript(""DatabaseLib"").callFunction(""ExecuteSQLQry"",Query, strDBDetail); qwerty Rs.next(); qwerty if (Rs.getString(""Count(*)"").equals(""0"")) qwerty {info(""Adding application service TF_TDTS006 to user group""); qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""U"", ""User Group"",false); qwerty think(thinkMed); qwerty info(""Waiting for some time...""); qwerty think(10); qwerty web.textBox(""{{obj.U.UserGroupSearchPage.UserGroupIDTxt}}"").setText(this.getVariables().get(""db.""+strPrimaryDatabank +"".UserGroupName"")); qwerty web.textBox(""{{obj.U.UserGroupSearchPage.UserGroupIDTxt}}"").click(); qwerty web.textBox(""{{obj.U.UserGroupSearchPage.UserGroupIDTxt}}"").pressEnter(); qwerty info(""From Data bank=""+this.getVariables().get(""db.""+strPrimaryDatabank +"".UserGroupName"")); qwerty info(""From UI=""+web.textBox(""{{obj.U.UserGroup.UsrGrpIdTxt}}"").getAttribute(""Value"")); qwerty if(web.textBox(""{{obj.U.UserGroup.UsrGrpIdTxt}}"").getAttribute(""Value"").equals(this.getVariables().get(""db.""+strPrimaryDatabank +"".UserGroupName""))){ qwerty info(""All services User Group loaded successfully""); qwerty }else{ qwerty "
28,"reportFailure(""ALL_SERVICES usergroup not loaded successfully""); qwerty }web.link(""{{obj.U.UserGroupPage.ApplicationServicesTab}}"").click(); qwerty think(thinkHigh); qwerty web.image(""{{obj.U.UserGroupPage.ApplicationServiceTab.imgAdd}}"").click(); qwerty think(thinkMed); qwerty web.textBox(""{{obj.U.UserGroupPage.ApplicationServiceIDTxt}}"").click(); qwerty web.textBox(""{{obj.U.UserGroupPage.ApplicationServiceIDTxt}}"").setText(this.getVariables().get(""db.""+strPrimaryDatabank +"".ApplicationServiceName"")); qwerty think(thinkLow); qwerty web.textBox(""{{obj.U.UserGroupPage.ApplicationServiceExpirationDateTxt}}"").click(); qwerty web.textBox(""{{obj.U.UserGroupPage.ApplicationServiceExpirationDateTxt}}"").setText(this.getVariables().get(""db.""+strPrimaryDatabank +"".ApplicationServiceExpiryDate"")); qwerty web.button(""{{obj.U.UserGroupPage.UserGrpSaveBtn}}"").click(); qwerty think(thinkMed); qwerty }else qwerty {info(""Application service is already added to the user group""); qwerty }getScript(""OUAFCore_UI"").callFunction(""startApp""); qwerty getScript(""BPALib"").callFunction(""executeBPAScript"",this.getVariables().get(""db.""+strPrimaryDatabank +"".BPAScrpt1Description""),true); qwerty think(thinkHigh); qwerty if(web.button(""{{obj.B.BPA.ErrorPopup.imbOK}}"").exists()) qwerty {web.button(""{{obj.B.BPA.ErrorPopup.imbOK}}"").click(); qwerty }think(thinkLow); qwerty String strScriptSteps = web.table(""{{obj.B.BPA.tblConsoleOutput}}"").exportToCSVString(); qwerty String strSyncID =getScript(""StringLib"").callFunction(""SolvePattern"",""<syncReqInboundId>([^<]*)</syncReqInboundId>"", strScriptSteps).toString(); qwerty //Some times Script pop-up is not displaying so closing browser and re-login to Application qwerty browser.closeAllBrowsers(); qwerty think(thinkHigh); qwerty getScript(""OUAFCore_UI"").callFunction(""startApp""); qwerty getScript(""BPALib"").callFunction(""executeBPAScript"",this.getVariables().get(""db.""+strPrimaryDatabank +"".BPAScrpt2Description""),true); qwerty think(thinkHigh); qwerty web.textBox(""{{obj.B.BPA.ConsoleBox.tfldInput1}}"").setText(strSyncID); qwerty web.button(""{{obj.B.BPA.ConsoleBox.imgContinue}}"").click(); qwerty think(thinkMed); qwerty if(web.table(""{{obj.B.BPA.tblConsoleOutput}}"").exportToCSVString().contains(""TEST PASSED: BO UPDATED"")) qwerty {"
29,"info(""Test Passed : The Sync BO updated properly without any error when TODO Role is not specified in transition algorithm.""); qwerty }else qwerty {"
30,"reportFailure(""Test Failed: the BO did not Updated properly when TODO role is not specified in transition algorithm.""); qwerty }}catch(Exception e){ qwerty info(""Exception -""+ e.toString()); qwerty "
31,"import java.sql.ResultSet; qwerty import java.util.HashMap; qwerty import java.util.regex.Matcher; qwerty import oracle.oats.scripting.modules.basic.api.*; qwerty import oracle.oats.scripting.modules.browser.api.*; qwerty import oracle.oats.scripting.modules.functionalTest.api.*; qwerty import oracle.oats.scripting.modules.utilities.api.*; qwerty import oracle.oats.scripting.modules.utilities.api.sql.*; qwerty import oracle.oats.scripting.modules.utilities.api.xml.*; qwerty import oracle.oats.scripting.modules.utilities.api.file.*; qwerty import oracle.oats.scripting.modules.webdom.api.*; qwerty public class script extends IteratingVUserScript { qwerty @ScriptService oracle.oats.scripting.modules.utilities.api.UtilitiesService utilities; qwerty @ScriptService oracle.oats.scripting.modules.browser.api.BrowserService browser; qwerty @ScriptService oracle.oats.scripting.modules.functionalTest.api.FunctionalTestService ft; qwerty @ScriptService oracle.oats.scripting.modules.webdom.api.WebDomService web; qwerty /*////////////////////////////////////////////////////////////////////////////// TDTS006  ///////////////////////////////////////////////////////////////////////////////////*/ qwerty /*	SCRIPT NAME		:	TDTS006 qwerty *	DESCRIPTION		:	Test 100813 Bug 14251420 - TO DO ROLE IS REQUIRED ON THE GENERIC TO DO ENTRY CREATOR ALG qwerty *					:	Test 98643 Bug 13103098 - COPY OF 12675940 - NEXT/PREVIOUS TO DO BUTTONS ISSUE qwerty *					:	Test 99163 BUG_11812272 - Incorrect role is set when forwarding todo role with message over qwerty *					:	Bug 12654500 - COPY OF 12553484 INCONSISTENT/UNPREDICTABLE SEQUENCING OF TO-DO LOGS qwerty *					:	Test 99600 To Do Search – Assign Multiple To Do Entry to a User qwerty *					:	Test 99607 To Do Search – Complete Multiple To Do Entries qwerty *					:	Test 99616 To Do Search – Reopen Multiple To Do Entries qwerty **	DEPENDENCY		:	Bundle TDTS006 (consists of Algorithm TF_TDTS006, Application Service TF_TDTS006, Business Object TF_TDTS006, Scripts TF_TDTS006_1,TF_TDTS006_2) qwerty *					: qwerty *	DEVELOPER		:	Srikanth Reddy Gagganapalli qwerty *	REVISION		:	13th Mar 2013 Created qwerty *					:	28-May-13: Sunny Mutyala - Added code for report generation qwerty *	TESTS COVERED   : 	Test 100813,98643,99163,99286 qwerty //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*/ qwerty //********************************************* Initializing the databanks and variables **************************/ qwerty // Initialize the Databank Names qwerty String strPrimaryDatabank = ""TDTS006""; qwerty // Initialize OR Names qwerty //String strPrimaryOR=""B""; qwerty String strPrimaryOR=""T""; qwerty // Inialize the think paramters qwerty int thinkLow = GlobalConstants.iLOW; qwerty int thinkMed = GlobalConstants.iNORMAL; qwerty int thinkHigh= GlobalConstants.iHIGH; qwerty int intCounter = 3; qwerty HashMap<String, String> ToDoRole; qwerty HashMap<String, String> ToDoType; qwerty String strToDoRoleName,strToDoTypeName,strToDoTypeDetailDesc; qwerty String strToDoRoleDesc,strToDoTypeDesc,strToDoTypePriority,strToDoTypeNavigationOption; qwerty String strUser1; qwerty String strUser2; qwerty String strCharTypePrefix; qwerty String strTemp; qwerty String strDBPrefix; qwerty String intToDoId; qwerty String strTemp1; qwerty String strActualPrefix; qwerty String strLogFile; qwerty String strTodoRoleName1, strTodoRoleDesc1,strTodoRoleName2, strTodoRoleDesc2; qwerty String[] strToDOPriority = new String[3]; qwerty String[] strToDOEntryLog = new String[3]; qwerty String[] strToDOIds = new String[3]; qwerty String ConnString; qwerty String[] strDBDetail = new String[3]; qwerty // initialize the Logger qwerty Logger log; qwerty //*****************************************************************************************************************/ qwerty public void initialize() throws Exception qwerty {log = getLogger(); qwerty getDatabank(""EnvironmentConfig"").getNextDatabankRecord(); qwerty ConnString = ""jdbc:oracle:thin:@//"" + getVariables().get(""db.EnvironmentConfig.DBServer"").trim() + "":1521/"" + getVariables().get(""db.EnvironmentConfig.DBName"").trim(); qwerty strDBDetail[0] = ConnString; qwerty strDBDetail[1] = getVariables().get(""db.EnvironmentConfig.DBUserID"").trim(); qwerty strDBDetail[2] = getVariables().get(""db.EnvironmentConfig.DBPassword"").trim(); qwerty browser.launch(); qwerty }public void run() throws Exception qwerty {strLogFile = getScript(""LoggingAndResultsReporting"").callFunction(""getPathForLogsFolder"").toString() + getScriptPackage().getScriptName() + "".log""; qwerty getScript(""LoggingAndResultsReporting"").callFunction(""createLogFile"",getScriptPackage().getScriptName(),""TC - 100813,98643:TO DO ROLE IS REQUIRED ON THE GENERIC TO DO ENTRY CREATOR ALG""); qwerty getDatabank(strPrimaryDatabank).getNextDatabankRecord(); qwerty test98643(); qwerty }public void test98643() throws Exception qwerty {/*////////////////////////////////////////////////////////////////////////////// test98643  //////////////////////////////////////////////////////////////////////////////////*/ qwerty /*	SCRIPT NAME		:	test98643 qwerty *	DESCRIPTION		:	Test 98643 Bug 13103098 - COPY OF 12675940 - NEXT/PREVIOUS TO DO BUTTONS ISSUE qwerty *					:	Test 99600 To Do Search – Assign Multiple To Do Entry to a User qwerty *					:	Test 99607 To Do Search – Complete Multiple To Do Entries qwerty *					:	Test 99616 To Do Search – Reopen Multiple To Do Entries qwerty *	DEPENDENCY		:	None qwerty *	DEVELOPER		:	Srikanth Reddy Gagganapalli qwerty *	REVISION		:	13th Mar 2013 Created qwerty *	TESTS COVERED   : 	Test 98643,99600,99607,99616 qwerty //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*/ qwerty try{ qwerty strUser1 = this.getVariables().get(""db.""+strPrimaryDatabank +"".LoginUser1""); qwerty strUser2 = this.getVariables().get(""db.""+strPrimaryDatabank +"".LoginUser2""); qwerty getScript(""OUAFCore_UI"").callFunction(""startApp"", strUser1,this.getVariables().get(""db.""+strPrimaryDatabank +"".LoginPassword1"")); qwerty strCharTypePrefix=getScript(""StringLib"").callFunction(""randomstring"",3,3).toString().toUpperCase(); qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Role"", true); qwerty think(thinkHigh); qwerty // Create a To Do Role qwerty getScript(""ToDoLib"").callFunction(""createToDoRole"",readDataBankforToDoRole()); qwerty think(thinkLow); qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Type"", true); qwerty think(thinkHigh); qwerty // Create a To Do Type qwerty getScript(""ToDoLib"").callFunction(""createToDoType"",readDataBankforToDoType_test98643()); qwerty //setting Priority list for ToDo array qwerty strToDOPriority[0]= ""Priority 40""; qwerty strToDOPriority[1]= ""Priority 30""; qwerty strToDOPriority[2]= ""Priority 20""; qwerty //Creating ToDo List and saving the ID's in strToDOIds list. qwerty for (int i = 0;i<intCounter;i++) qwerty {strToDOIds[i] = createToDoEntry(strToDoRoleName,strToDOPriority[i]); qwerty info(""Todo strToDOIds[""+  i  +""] =""+ strToDOIds[i]); qwerty }//Navigating to the List qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Main"", ""To Do"", ""To Do List"", false); qwerty think(thinkHigh); qwerty info(""strToDoTypeName"" + strToDoTypeName); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoTypeforUserSearch.ToDoTypeTxt}}"").click(); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoTypeforUserSearch.ToDoTypeTxt}}"").setText(strToDoTypeName); qwerty think(thinkLow); qwerty web.button(""{{obj."" + strPrimaryOR + "".ToDoTypeforUserSearch.ToDoTypeImg}}"").click(); qwerty think(thinkLow); qwerty if(web.textBox(""{{obj."" + strPrimaryOR + "".ToDoList.ToDoTypeTxt}}"").getAttribute(""value"").equalsIgnoreCase(strToDoTypeName)){ qwerty info(""To Do List Page is displayed successfully""); qwerty }else{ qwerty info(""To Do List Page is not displayed successfully""); qwerty }web.selectBox(""{{obj."" + strPrimaryOR + "".ToDoList.FilterbyLst}}"").selectOptionByText(""All""); qwerty web.element(""{{obj."" + strPrimaryOR + "".toDoEntrySearch.lnkTodoList_item1}}"").click(); qwerty //verifying that the List is going properly using next navigation keys. qwerty for (int i = 0; i < intCounter; i++) { qwerty think(thinkHigh); qwerty if(web.textBox(""{{obj."" + strPrimaryOR + "".ToDoEntry.ToDoIdTxt}}"").getAttribute(""Value"").trim().equals(strToDOIds[i])) qwerty {"
32,"info(""TEST PASSED : expected TODO with priority ""+strToDOPriority[i] + ""and ID ""+ strToDOIds[i]+""  loaded successfully ""); qwerty if(i < intCounter-1) qwerty {web.image(""{{obj."" + strPrimaryOR + "".toDoEntry.imgNextToDo}}"").click(); qwerty }}else qwerty {"
33,"reportFailure(""Test Failed, expected TODO with priority ""+strToDOPriority[i] + ""and ID ""+ strToDOIds[i]+"" not loaded "" ); qwerty }}// Calling the test 99286 verification. qwerty test99286(); qwerty //Test 99600 To Do Search – Assign Multiple To Do Entry to a User qwerty //Assign Multiple TODO Entries qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Main"", ""To Do"", ""To Do Search""); qwerty think(thinkHigh); qwerty web.selectBox(""{{obj.T.ToDoSearchPage.ToDoTypeFilter}}"").selectOptionByText(""Specific To Do Type""); qwerty think(thinkMed); qwerty web.textBox(""{{obj.T.ToDoSearchPage.ToDoTypeFilter.ToDoType}}"").setText(strToDoTypeName); qwerty //web.textBox(""{{obj.T.ToDoSearchPage.ToDoTypeFilter.ToDoType}}"").pressTab(); qwerty web.textBox(""{{obj.T.ToDoSearchPage.ToDoTypeFilter.ToDoType}}"").pressEnter(); qwerty //web.image(""{{obj.T.ToDoSearchPage.ToDoSearchPage.ToDoTypeFilter.imgSearch}}"").click(); qwerty think(thinkMed); qwerty web.selectBox(""{{obj.T.ToDoSearchPage.DateRangeFilter}}"").selectOptionByText(""All""); qwerty think(thinkMed); qwerty web.button(""{{obj.T.ToDoSearchPage.resultsImg}}"").click(); qwerty think(thinkMed); qwerty web.button(""{{obj.T.ToDoSearchPage.btnSelectAll}}"").click(); qwerty think(thinkLow); qwerty String originalUser=web.textBox(""{{obj.T.ToDoSearchPage.tfldAssigned_TO_User}}"").getAttribute(""value""); qwerty info(""originalUser=""+originalUser); qwerty web.textBox(""{{obj.T.ToDoSearchPage.tfldAssigned_TO_User}}"").setText(strUser2); qwerty web.textBox(""{{obj.T.ToDoSearchPage.tfldAssigned_TO_User}}"").pressTab(); qwerty think(thinkLow); qwerty web.button(""{{obj.T.ToDoSearchPage.btnAssign}}"").click(); qwerty think(thinkHigh); qwerty for(int i=0;i<intCounter;i++) qwerty {if(web.table(""{{obj.T.ToDoSearchPage.resultToDos}}"").getCell(2+i,6).trim().contains(strUser2)) qwerty {"
34,"reportFailure(""Test Failed: ToDo did not get assigned to the Expected user ""+strUser2); qwerty }}//assigning Back to the Original User qwerty web.button(""{{obj.T.ToDoSearchPage.btnSelectAll}}"").click(); qwerty web.textBox(""{{obj.T.ToDoSearchPage.tfldAssigned_TO_User}}"").setText(strUser1); qwerty web.textBox(""{{obj.T.ToDoSearchPage.tfldAssigned_TO_User}}"").pressTab(); qwerty think(thinkLow); qwerty web.button(""{{obj.T.ToDoSearchPage.btnAssign}}"").click(); qwerty think(thinkHigh); qwerty for(int i=0;i<intCounter;i++) qwerty {if(web.table(""{{obj.T.ToDoSearchPage.resultToDos}}"").getCell(2+i,6).trim().contains(strUser1)) qwerty {info(""Test Passed: ToDO got Assigned to To the expected User""); qwerty }else qwerty {reportFailure(""Test Failed: ToDo did not get assigned to the Expected user ""+strUser2); qwerty }}//Test 99616 To Do Search – Reopen Multiple To Do Entries qwerty // Reopening multiple ToDo's qwerty web.button(""{{obj.T.ToDoSearchPage.btnSelectAll}}"").click(); qwerty web.button(""{{obj.T.ToDoSearchPage.btnReopen}}"").click(); qwerty think(thinkHigh); qwerty for(int i=0;i<intCounter;i++) qwerty {if(web.table(""{{obj.T.ToDoSearchPage.resultToDos}}"").getCell(2+i,8).trim().contains(""Open"")) qwerty {"
35,"reportFailure(""Test Failed: ToDo did not get updated to Open status""); qwerty }}//assigning Back to the Original User qwerty web.button(""{{obj.T.ToDoSearchPage.btnSelectAll}}"").click(); qwerty web.textBox(""{{obj.T.ToDoSearchPage.tfldAssigned_TO_User}}"").setText(strUser1); qwerty web.textBox(""{{obj.T.ToDoSearchPage.tfldAssigned_TO_User}}"").pressTab(); qwerty web.button(""{{obj.T.ToDoSearchPage.btnAssign}}"").click(); qwerty think(thinkHigh); qwerty for(int i=0;i<intCounter;i++) qwerty {if(web.table(""{{obj.T.ToDoSearchPage.resultToDos}}"").getCell(2+i,6).trim().contains(strUser1)) qwerty {"
36,"reportFailure(""Test Failed: ToDo did not get assigned to the Expected user ""+strUser1); qwerty }}//Test 99607 To Do Search – Complete Multiple To Do Entries qwerty //Completing all ToDo's qwerty web.button(""{{obj.T.ToDoSearchPage.btnSelectAll}}"").click(); qwerty web.button(""{{obj.T.ToDoSearchPage.btnComplete}}"").click(); qwerty think(thinkHigh); qwerty for(int i=0;i<intCounter;i++) qwerty {if(web.table(""{{obj.T.ToDoSearchPage.resultToDos}}"").getCell(2+i,8).trim().contains(""Completed"")) qwerty {"
37,"reportFailure(""Test Failed: ToDo did not get Completed""); qwerty }}}catch(Exception e){ qwerty info(""Exception - ""+e.toString()); qwerty "
38,"try{ qwerty //strLogFile = getScript(""LoggingAndResultsReporting"").callFunction(""getPathForLogsFolder"").toString() + getScriptPackage().getScriptName() + "".log""; qwerty // getScript(""LoggingAndResultsReporting"").callFunction(""createLogFile"",getScriptPackage().getScriptName(),""TC - ""); qwerty getScript(""OUAFCore_UI"").callFunction(""startApp""); qwerty think(thinkHigh); qwerty // Getting values from databank qwerty getDatabank(strPrimaryDatabank).getNextDatabankRecord(); qwerty think(thinkLow); qwerty //Calling Random Function to append random string (3 characters)at the end of To Do Role name and To Do Type name qwerty strCharTypePrefix=getScript(""StringLib"").callFunction(""randomstring"",3,3).toString().toUpperCase(); qwerty testCreateToDoRoleTDTS011(); qwerty think(thinkLow); qwerty testCreateToDoTypeTDTS011(); qwerty "
39,"// This method will kill the browser after each script execution depending on the flag values of closebrowseraftereachtest and processname from EnvinomentConfig.csv qwerty //getScript(""OUAFCore_UI"").callFunction(""customRecovery""); qwerty getScript(""FunctionLibrary"").callFunction(""endScenario""); qwerty browser.closeAllBrowsers(); qwerty }public void testCreateToDoRoleTDTS011() throws Exception{ qwerty /********************************************************************************************** qwerty *	TEST NAME		:	Test will verify To Do Role creation qwerty *	DESCRIPTION		:	This script would check validation while creating To Do Role qwerty *	DEPENDENCY		:	Common Libraries qwerty *	DEVELOPER		:	Suman Hanumanthakari qwerty *	REVISION History:	04 August 2013 Created qwerty */**********************************************************************************************/ qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Role"", true); qwerty think(thinkHigh); qwerty // Create a To Do Role qwerty getScript(""ToDoLib"").callFunction(""createToDoRole"",readDataBankforToDoRole()); qwerty //Verification steps for TO DO Role creation qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Role"", false); qwerty think(thinkLow); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoRoleSearch.RoleIdTxt}}"").setText(strToDoRoleName); qwerty think(thinkLow); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoRoleSearch.RoleIdTxt}}"").pressEnter(); qwerty think(thinkMed); qwerty strTemp=web.textBox(""{{obj."" + strPrimaryOR + "".ToDoRole.ToDoRoleIdTxt}}"").getAttribute(""value"").toString().trim(); qwerty if((strTemp.trim()).equalsIgnoreCase(strToDoRoleName.trim())){ qwerty info(""TO DO Role successfully created""); qwerty "
40,"//getScript(""LoggingAndResultsReporting"").callFunction(""LogResultsOutputAndShowStepResults"",""Verify whether ToDo Role is created"",""ToDo Role is successfully created"",""PASSED""); qwerty }else{ qwerty "
41,"//getScript(""LoggingAndResultsReporting"").callFunction(""LogResultsOutputAndShowStepResults"",""Verify whether ToDo Role is created"",""ToDo Role is NOT created"",""FAILED""); qwerty reportFailure(""TO DO Role not successfully created""); qwerty }}public void testCreateToDoTypeTDTS011() throws Exception{ qwerty /********************************************************************************************** qwerty *	TEST NAME		:	Test will verify To Do Type creation qwerty *	DESCRIPTION		:	This script would check validation while creating To Do Type qwerty *	DEPENDENCY		:	Common Libraries qwerty *	DEVELOPER		:	Suman Hanumanthakari qwerty *	REVISION History:	04 August 2013 Created qwerty */**********************************************************************************************/ qwerty think(thinkLow); qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Type"", true); qwerty think(thinkHigh); qwerty // Create a To Do Type qwerty getScript(""ToDoLib"").callFunction(""createToDoType"",readDataBankforToDoType()); qwerty //Verification steps for TO DO Role creation qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Type"", false); qwerty think(thinkLow); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoTypeSearchPage.ToDoTypeTxt}}"").setText(strToDoTypeName); qwerty think(thinkLow); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoTypeSearchPage.ToDoTypeTxt}}"").pressEnter(); qwerty think(thinkMed); qwerty strTemp=web.textBox(""{{obj."" + strPrimaryOR + "".ToDoType.ToDoTypeId}}"").getAttribute(""value"").toString().trim(); qwerty if((strTemp.trim()).equalsIgnoreCase(strToDoTypeName.trim())){ qwerty "
42,"//getScript(""LoggingAndResultsReporting"").callFunction(""LogResultsOutputAndShowStepResults"",""Verify whether ToDo Type is created"",""TO DO Type "" + strToDoTypeName + "" successfully created"",""PASSED""); qwerty info(""TO DO Type "" + strToDoTypeName + "" successfully created""); qwerty }else{ qwerty "
43,"import java.sql.ResultSet; qwerty import java.util.HashMap; qwerty import java.util.regex.Matcher; qwerty import oracle.oats.scripting.modules.basic.api.*; qwerty import oracle.oats.scripting.modules.browser.api.*; qwerty import oracle.oats.scripting.modules.functionalTest.api.*; qwerty import oracle.oats.scripting.modules.utilities.api.*; qwerty import oracle.oats.scripting.modules.utilities.api.sql.*; qwerty import oracle.oats.scripting.modules.utilities.api.xml.*; qwerty import oracle.oats.scripting.modules.utilities.api.file.*; qwerty import oracle.oats.scripting.modules.webdom.api.*; qwerty public class script extends IteratingVUserScript { qwerty @ScriptService oracle.oats.scripting.modules.utilities.api.UtilitiesService utilities; qwerty @ScriptService oracle.oats.scripting.modules.browser.api.BrowserService browser; qwerty @ScriptService oracle.oats.scripting.modules.functionalTest.api.FunctionalTestService ft; qwerty @ScriptService oracle.oats.scripting.modules.webdom.api.WebDomService web; qwerty /*////////////////////////////////////////////////////////////////////////////// TDTS006  ///////////////////////////////////////////////////////////////////////////////////*/ qwerty /*	SCRIPT NAME		:	TDTS012 qwerty *	DESCRIPTION		:	Bug 16923342 - COPY OF BUG 16919009 - ISSUES IN PURGING COMPLETED TO DO ENTRIES USING 'F1-TDPG' qwerty **	DEPENDENCY		: qwerty *	DEVELOPER		:	Suman Hanumanthakari qwerty *	REVISION		:	27th Nov 2013 Created qwerty *	TESTS COVERED   : 	Test 122873 qwerty //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*/ qwerty //********************************************* Initializing the databanks and variables **************************/ qwerty // Initialize the Databank Names qwerty String strPrimaryDatabank = ""TDTS012""; qwerty // Initialize OR Names qwerty //String strPrimaryOR=""B""; qwerty String strPrimaryOR=""T""; qwerty // Inialize the think paramters qwerty int thinkLow = GlobalConstants.iLOW; qwerty int thinkMed = GlobalConstants.iNORMAL; qwerty int thinkHigh= GlobalConstants.iHIGH; qwerty static int intBatchMaxProcessTimeAllowed = 360; qwerty int intCounter = 3; qwerty HashMap<String, String> ToDoRole; qwerty HashMap<String, String> ToDoType; qwerty String strToDoRoleName,strToDoTypeName,strToDoTypeDetailDesc; qwerty String strToDoRoleDesc,strToDoTypeDesc,strToDoTypePriority,strToDoTypeNavigationOption; qwerty String strUser1; qwerty String strUser2; qwerty String strCharTypePrefix; qwerty String strTemp; qwerty String strDBPrefix; qwerty String intToDoId; qwerty String strTemp1; qwerty String strActualPrefix; qwerty String strLogFile; qwerty String strTodoRoleName1, strTodoRoleDesc1,strTodoRoleName2, strTodoRoleDesc2; qwerty String[] strToDOPriority = new String[3]; qwerty String[] strToDOEntryLog = new String[3]; qwerty String[] strToDOIds = new String[3]; qwerty String ConnString; qwerty String[] strDBDetail = new String[3]; qwerty // initialize the Logger qwerty Logger log; qwerty //*****************************************************************************************************************/ qwerty public void initialize() throws Exception qwerty {log = getLogger(); qwerty getDatabank(""EnvironmentConfig"").getNextDatabankRecord(); qwerty browser.launch(); qwerty }public void run() throws Exception qwerty {strLogFile = getScript(""LoggingAndResultsReporting"").callFunction(""getPathForLogsFolder"").toString() + getScriptPackage().getScriptName() + "".log""; qwerty getScript(""LoggingAndResultsReporting"").callFunction(""createLogFile"",getScriptPackage().getScriptName(),""TC - TO DO ROLE IS REQUIRED ON THE GENERIC TO DO ENTRY CREATOR ALG""); qwerty getDatabank(strPrimaryDatabank).getNextDatabankRecord(); qwerty strUser1 = this.getVariables().get(""db.""+strPrimaryDatabank +"".LoginUser1""); qwerty strUser2 = this.getVariables().get(""db.""+strPrimaryDatabank +"".LoginUser2""); qwerty getScript(""OUAFCore_UI"").callFunction(""startApp"", strUser1,this.getVariables().get(""db.""+strPrimaryDatabank +"".LoginPassword1"")); qwerty strCharTypePrefix=getScript(""StringLib"").callFunction(""randomstring"",3,3).toString().toUpperCase(); qwerty test122873(); qwerty completeToDo(); qwerty runBatch(); qwerty }public void test122873() throws Exception qwerty {/*////////////////////////////////////////////////////////////////////////////// test122873  //////////////////////////////////////////////////////////////////////////////////*/ qwerty /*	SCRIPT NAME		:	test122873 qwerty *	DESCRIPTION		:	Test 122783  COPY OF BUG 16919009 - ISSUES IN PURGING COMPLETED TO DO ENTRIES USING 'F1-TDPG' qwerty *	DEPENDENCY		:	None qwerty *	DEVELOPER		:	Suman Hanumanthakari qwerty *	REVISION		:	27th Nov 2013 Created qwerty *	TESTS COVERED   : 	Test 122873 qwerty //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*/ qwerty strUser1 = this.getVariables().get(""db.""+strPrimaryDatabank +"".LoginUser1""); qwerty strUser2 = this.getVariables().get(""db.""+strPrimaryDatabank +"".LoginUser2""); qwerty getScript(""OUAFCore_UI"").callFunction(""startApp"", strUser1,this.getVariables().get(""db.""+strPrimaryDatabank +"".LoginPassword1"")); qwerty strCharTypePrefix=getScript(""StringLib"").callFunction(""randomstring"",3,3).toString().toUpperCase(); qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Role"", true); qwerty think(thinkMed); qwerty // Create a To Do Role qwerty //getScript(""ToDoLib"").callFunction(""createToDoRole"",readDataBankforToDoRole()); qwerty CreateToDoRole(); qwerty think(thinkLow); qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Type"", true); qwerty think(thinkHigh); qwerty // Create a To Do Type qwerty //getScript(""ToDoLib"").callFunction(""createToDoType"",readDataBankforToDoType_test98643()); qwerty CreateToDoType(); qwerty //setting Priority list for ToDo array qwerty strToDOPriority[0]= ""Priority 40""; qwerty strToDOPriority[1]= ""Priority 30""; qwerty strToDOPriority[2]= ""Priority 20""; qwerty //Creating ToDo List and saving the ID's in strToDOIds list. qwerty for (int i = 0;i<intCounter;i++) qwerty {strToDOIds[i] = createToDoEntry(strToDoRoleName,strToDOPriority[i]); qwerty info(""Todo strToDOIds[""+  i  +""] =""+ strToDOIds[i]); qwerty }//Navigating to the List qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Main"", ""To Do"", ""To Do List""); qwerty think(thinkHigh); qwerty info(""strToDoTypeName"" + strToDoTypeName); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoTypeforUserSearch.ToDoTypeTxt}}"").click(); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoTypeforUserSearch.ToDoTypeTxt}}"").setText(strToDoTypeName); qwerty think(thinkLow); qwerty web.image(""{{obj."" + strPrimaryOR + "".ToDoTypeforUserSearch.ToDoTypeImg}}"").click(); qwerty think(thinkLow); qwerty if(web.textBox(""{{obj."" + strPrimaryOR + "".ToDoList.ToDoTypeTxt}}"").getAttribute(""value"").equalsIgnoreCase(strToDoTypeName)){ qwerty info(""To Do List Page is displayed successfully""); qwerty }else{ qwerty info(""To Do List Page is not displayed successfully""); qwerty }web.selectBox(""{{obj."" + strPrimaryOR + "".ToDoList.FilterbyLst}}"").selectOptionByText(""All""); qwerty think(thinkLow); qwerty web.element(""{{obj."" + strPrimaryOR + "".toDoEntrySearch.lnkTodoList_item1}}"").click(); qwerty //verifying that the List is going properly using next navigation keys. qwerty for (int i = 0; i < intCounter; i++) { qwerty think(thinkHigh); qwerty if(web.textBox(""{{obj."" + strPrimaryOR + "".ToDoEntry.ToDoIdTxt}}"").getAttribute(""Value"").trim().equals(strToDOIds[i])) qwerty {"
44,"info(""TEST PASSED : expected TODO with priority ""+strToDOPriority[i] + ""and ID ""+ strToDOIds[i]+""  loaded successfully ""); qwerty if(i < intCounter-1) qwerty {web.image(""{{obj."" + strPrimaryOR + "".toDoEntry.imgNextToDo}}"").click(); qwerty }}else qwerty {"
45,"reportFailure(""Test Failed, expected TODO with priority ""+strToDOPriority[i] + ""and ID ""+ strToDOIds[i]+"" not loaded "" ); qwerty }}}public void CreateToDoRole() throws Exception{ qwerty /********************************************************************************************** qwerty *	TEST NAME		:	Test will verify To Do Role creation qwerty *	DESCRIPTION		:	This script would check validation while creating To Do Role qwerty *	DEPENDENCY		:	Common Libraries qwerty *	DEVELOPER		:	Suman Hanumanthakari qwerty *	REVISION History:	27 May 2015 Created qwerty */**********************************************************************************************/ qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Role"", true); qwerty think(thinkHigh); qwerty // Create a To Do Role qwerty getScript(""ToDoLib"").callFunction(""createToDoRole"",readDataBankforToDoRole()); qwerty //Verification steps for TO DO Role creation qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Role"", false); qwerty think(thinkLow); qwerty web.textBox(""{{obj.""+ strPrimaryOR +"".ToDoRoleSearch.RoleIdTxt}}"").setText(strToDoRoleName); qwerty think(thinkLow); qwerty web.textBox(""{{obj.""+ strPrimaryOR +"".ToDoRoleSearch.RoleIdTxt}}"").pressEnter(); qwerty think(thinkMed); qwerty strTemp=web.textBox(""{{obj.""+ strPrimaryOR +"".ToDoRole.ToDoRoleIdTxt}}"").getAttribute(""value"").toString().trim(); qwerty if((strTemp.trim()).equalsIgnoreCase(strToDoRoleName.trim())){ qwerty "
46,"reportFailure(""TO DO Role not successfully created""); qwerty }}public void CreateToDoType() throws Exception{ qwerty /********************************************************************************************** qwerty *	TEST NAME		:	Test will verify To Do Type creation qwerty *	DESCRIPTION		:	This script would check validation while creating To Do Type qwerty *	DEPENDENCY		:	Common Libraries qwerty *	DEVELOPER		:	Jyothi Pathuri qwerty *	REVISION History:	26 November 2012 Created qwerty */**********************************************************************************************/ qwerty think(thinkLow); qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Type"", true); qwerty think(thinkHigh); qwerty // Create a To Do Type qwerty getScript(""ToDoLib"").callFunction(""createToDoType"",readDataBankforToDoType()); qwerty //Verification steps for TO DO Role creation qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Admin"", ""T"", ""To Do Type"", false); qwerty think(thinkLow); qwerty web.textBox(""{{obj.""+ strPrimaryOR +"".ToDoTypeSearchPage.ToDoTypeTxt}}"").setText(strToDoTypeName); qwerty think(thinkLow); qwerty web.textBox(""{{obj.""+ strPrimaryOR +"".ToDoTypeSearchPage.ToDoTypeTxt}}"").pressEnter(); qwerty think(thinkMed); qwerty strTemp=web.textBox(""{{obj.""+ strPrimaryOR +"".ToDoType.ToDoTypeId}}"").getAttribute(""value"").toString().trim(); qwerty if((strTemp.trim()).equalsIgnoreCase(strToDoTypeName.trim())){ qwerty info(""TO DO Type "" + strToDoTypeName + "" successfully created""); qwerty "
47,"reportFailure(""TO DO Type "" + strToDoTypeName + ""  not successfully created""); qwerty }}public String  createToDoEntry(String strToDoRole, String strToDoPriority) throws Exception qwerty {/*///////////////////////////////////////////////////////////////////////////////////// qwerty *	TEST NAME		:	Function to create a To Do Entry qwerty *	DESCRIPTION		:	This script will create a To Do Entry qwerty *	DEVELOPER		:	Srikanth Gagganapalli qwerty *	REVISION History:	15th Mar 2013 Created qwerty /*///////////////////////////////////////////////////////////////////////////////////*/ qwerty think(thinkLow); qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Main"", ""To Do"", ""To Do Entry"", true); qwerty think(thinkHigh); qwerty web.selectBox(""{{obj."" + strPrimaryOR + "".ToDoEntryAdd.ToDoTypeSelectBox}}"").selectOptionByText(strToDoTypeDesc.trim()); qwerty think(thinkLow); qwerty web.selectBox(""{{obj."" + strPrimaryOR + "".ToDoEntryAdd.PriorityFlagLst}}"").selectOptionByText(strToDoPriority); qwerty think(thinkLow); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoEntryAdd.SubjectTxt}}"").click(); qwerty web.textBox(""{{obj."" + strPrimaryOR + "".ToDoEntryAdd.SubjectTxt}}"").setText(strToDoTypeDesc); qwerty think(thinkMed); qwerty //think(thinkHigh); qwerty web.button(""{{obj."" + strPrimaryOR + "".ToDoEntryAdd.OkBtn}}"").click(); qwerty think(thinkHigh); qwerty intToDoId=web.textBox(""{{obj."" + strPrimaryOR + "".ToDoEntry.ToDoIdTxt}}"").getAttribute(""value""); qwerty return intToDoId; qwerty }public void completeToDo() throws Exception qwerty {/*////////////////////////////////////////////////////////////////////////////// /////////////////////////////////////////////////////////////////////*/ qwerty /*	SCRIPT NAME		:	Function to complete toDo Entries qwerty *	DESCRIPTION		:	Function to complete toDo Entries qwerty *	DEPENDENCY		:	None qwerty *	DEVELOPER		:	Suman Hanumanthakari qwerty *	REVISION		:	27th Nov 2013 Created qwerty *	TESTS COVERED   : 	Test 122873 qwerty ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*/ qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Main"", ""To Do"", ""To Do Search""); qwerty think(thinkHigh); qwerty web.selectBox(""{{obj.T.ToDoSearchPage.ToDoTypeFilter}}"").selectOptionByText(""Specific To Do Type""); qwerty think(thinkMed); qwerty web.textBox(""{{obj.T.ToDoSearchPage.ToDoTypeFilter.ToDoType}}"").setText(strToDoTypeName); qwerty web.textBox(""{{obj.T.ToDoSearchPage.ToDoTypeFilter.ToDoType}}"").pressEnter(); qwerty think(thinkMed); qwerty web.selectBox(""{{obj.T.ToDoSearchPage.DateRangeFilter}}"").selectOptionByText(""All""); qwerty think(thinkMed); qwerty web.button(""{{obj.T.ToDoSearchPage.resultsImg}}"").click(); qwerty think(thinkMed); qwerty web.button(""{{obj.T.ToDoSearchPage.btnSelectAll}}"").click(); qwerty think(thinkLow); qwerty web.button(""{{obj.T.ToDoSearchPage.btnComplete}}"").click(); qwerty think(thinkHigh); qwerty for(int i=0;i<intCounter;i++) qwerty {if(web.table(""{{obj.T.ToDoSearchPage.resultToDos}}"").getCell(2+i,8).trim().contains(""Completed"")) qwerty {"
48,"reportFailure(""Test Failed: ToDo did not get Completed""); qwerty }}}public  void runBatch() throws Exception qwerty {/*////////////////////////////////////////////////////////////////////////////// /////////////////////////////////////////////////////////////////////*/ qwerty /*	SCRIPT NAME		:	Function to run the F1-TDPG batch job qwerty *	DESCRIPTION		:	Function to run the F1-TDPG batch job qwerty *	DEPENDENCY		:	None qwerty *	DEVELOPER		:	Suman Hanumanthakari qwerty *	REVISION		:	27th Nov 2013 Created qwerty *	TESTS COVERED   : 	Test 122873 qwerty ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////*/ qwerty getScript(""OUAFCore_UI"").callFunction(""selectMenu"", ""Main"", ""Batch"", ""Batch Job Submission"", true); qwerty web.window(""{{obj.B.BatchJobSubmissionPage}}"").waitForPage(null); qwerty web.textBox(""{{obj.B.BatchJobSubmissionPage.BatchCodeTxt}}"").setText(""F1-TDPG""); qwerty web.textBox(""{{obj.B.BatchJobSubmissionPage.BatchCodeTxt}}"").pressTab(); qwerty think(thinkHigh); qwerty //web.textBox(""{{obj.B.BatchJobSubmissionPage.isDelAll}}"").focus(); qwerty web.textBox(""{{obj.B.BatchJobSubmissionPage.isDelAll}}"").click(); qwerty web.textBox(""{{obj.B.BatchJobSubmissionPage.isDelAll}}"").setText(""N""); qwerty //web.textBox(""{{obj.B.BatchJobSubmissionPage.ThreadNbrTxt}}"").pressTab(); qwerty think(thinkLow); qwerty //web.textBox(""{{obj.B.BatchJobSubmissionPage.delTodotype}}"").focus(); qwerty web.textBox(""{{obj.B.BatchJobSubmissionPage.delTodotype}}"").click(); qwerty web.textBox(""{{obj.B.BatchJobSubmissionPage.delTodotype}}"").setText(strToDoTypeName); qwerty //web.textBox(""{{obj.B.BatchJobSubmissionPage.ThreadCntTxt}}"").pressTab(); qwerty think(thinkLow); qwerty web.textBox(""{{obj.B.BatchJobSubmissionPage.noofDays}}"").click(); qwerty web.textBox(""{{obj.B.BatchJobSubmissionPage.noofDays}}"").setText(""0""); qwerty think(thinkMed); qwerty web.element(""{{obj.B.BatchJobSubmissionPage.SaveBtn}}"").click(); qwerty //getScript(""OUAFCore_UI"").callFunction(""clickSave""); qwerty log.info(""saved the batch""); qwerty think(thinkMed); qwerty // -- Loop until status is ""Ended"" or the time limit is up. qwerty getScript(""OUAFCore_UI"").callFunction(""startTimer""); qwerty while (!web.element(""{{obj.B.BatchJobSubmissionPage.BatchJobStatusTxt}}"").getAttribute(""innerText"").trim().equals(""Ended"")){ qwerty log.info(""Batch Job Ststus: ""+web.element(""{{obj.B.BatchJobSubmissionPage.BatchJobStatusTxt}}"").getAttribute(""innerText"")); qwerty think(thinkMed); qwerty web.element(""{{obj.B.BatchJobSubmissionPage.Refreshbtn}}"").click(); qwerty think(thinkMed); qwerty if (Integer.parseInt(getScript(""OUAFCore_UI"").callFunction(""getElapsedTimeSecs"").toString()) > intBatchMaxProcessTimeAllowed){ qwerty "
